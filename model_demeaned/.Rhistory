1+1
plot(1:10, 1:10)
file.exists("")
setwd("/Users/authe/scratch")
dat <- read.csv(file="corra_ts.csv")
head(dat)
library("zoo")
dat <- zoo(x = dat, order.by = dat$date)
plot(dat$corra)
dat
dat <- read.csv(file="corra_ts.csv")
y = cbind(dat$policy_rate, dat$corra)
dat <- zoo(x = y, order.by = dat$date)
y
dat <- read.csv(file="corra_ts.csv")
y = cbind(as.numeric(dat$policy_rate), as.numeric(dat$corra))
dat <- zoo(x = y, order.by = dat$date)
dat <- read.csv(file="corra_ts.csv")
y = cbind(as.numeric(dat$policy_rate), as.numeric(dat$corra))
dat <- zoo(x = y, order.by = dat$date)
dat
dat
index(dat)
class(index(dat))
as.Date(index(dat))
dat <- read.csv(file="corra_ts.csv")
y = cbind(as.numeric(dat$policy_rate), as.numeric(dat$corra))
dat <- zoo(x = y, order.by = as.Date(dat$date))
dat
class(index(dat))
dat
names(dat)
names(dat) <- c("policy_rate", "corra")
dat
plot(dat$corra)
plot(dat$corra- dat$policy_rate)
sd(dat$corra- dat$policy_rate)
sd(dat$corra- dat$policy_rate, na.rm = T)
corra_dev = (dat$corra - dat$policy_rate) * 100
plot(corra_dev)
plot(corra_dev)
par(new = TRUE)
plot(dat$policy_rate, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(index(dat))))
mtext("z", side=4, line=3)
plot(corra_dev)
par(new = TRUE)
plot(dat$policy_rate, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(dat$policy_rate))
mtext("z", side=4, line=3)
plot(corra_dev)
par(new = TRUE)
plot(dat$policy_rate, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
plot(dat$policy_rate, type = "l", axis = FALSE, bty = "n", xlab = "", ylab = "")
plot(corra_dev)
par(new = TRUE)
plot(dat$policy_rate, type = "l", axis = FALSE, bty = "n", xlab = "", ylab = "")
plot(corra_dev)
par(new = TRUE)
plot(dat$policy_rate, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
plot(dat$policy_rate, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "", col="red")
plot(corra_dev)
par(new = TRUE)
plot(dat$policy_rate, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "", col="red")
1/0
setwd("/Users/authe/githome/Totem_MKF/model_demeaned")
load("../../../Downloads/Andreas-CheckCodeDuetoKalmanGainexcess/ChainEstimatesHomoModel/SPXT12K105CE/results_mcmc_Seed1M1crit_eff0p_class09.RData")
# results of chain ( size nbatch * 6)
batch_mcmc <- out_mcmc$batch
dim(batch_mcmc)
l=0
h=1
# chain of rescaled parameters (plot to check burn in phase and mixing of chain) #nolint
rho_mcmc <- exp(batch_mcmc[, 1]) / (1 + exp(batch_mcmc[, 1]))
#omega_mcmc <- exp(batch_mcmc[, 2]) / (1 + exp(batch_mcmc[, 2]))
sig_u_mcmc <- (l + h * exp(batch_mcmc[, 2])) / (1 + exp(batch_mcmc[, 2]))
sig_e_mcmc <- (l + h * exp(batch_mcmc[, 3])) / (1 + exp(batch_mcmc[, 3]))
sig_n_mcmc <- (l + h * exp(batch_mcmc[, 4])) / (1 + exp(batch_mcmc[, 4]))
#sig_z_mcmc <- (l + h * exp(batch_mcmc[, 6])) / (1 + exp(batch_mcmc[, 6]))
len(rhom_mcmc)
len(rho_mcmc)
length(rho_mcmc)
plot(1:10000, rho_mcmc)
plot(1:10000, sig_u_mcmc)
plot(1:10000, sig_e_mcmc)
plot(1:10000, sig_n_mcmc)
burnin_mcmc <- 5000
nbatch_mcmc <- 10000
paras_est <- c(mean(rho_mcmc[burnin_mcmc:nbatch_mcmc]),
mean(sig_u_mcmc[burnin_mcmc:nbatch_mcmc]),
mean(sig_e_mcmc[burnin_mcmc:nbatch_mcmc]),
mean(sig_n_mcmc[burnin_mcmc:nbatch_mcmc]))
paras_est
source("createStateSpaceMat2_Lagged_pubpriv_heterogenous.R")
ord <- 2
rho <- paras_est[1]
omega <- 1
sig_u <- para_est[2]
ord <- 2
rho <- paras_est[1]
omega <- 1
sig_u <- paras_est[2]
sig_e <- paras_est[3]
sig_n <- paras_est[4]
testSS <- StateSpaceMatLag(ord, rho, omega, sig_u, sig_e, sig_n, tol=1e-15)
testSS$KK
ord <- 2
rho <- paras_est[1]
omega <- 0.999
sig_u <- paras_est[2]
sig_e <- paras_est[3]
sig_n <- paras_est[4]
testSS <- StateSpaceMatLag(ord, rho, omega, sig_u, sig_e, sig_n, tol=1e-15)
testSS$KK
ord <- 2
rho <- paras_est[1]
omega <- 0.99
sig_u <- paras_est[2]
sig_e <- paras_est[3]
sig_n <- paras_est[4]
testSS <- StateSpaceMatLag(ord, rho, omega, sig_u, sig_e, sig_n, tol=1e-15)
testSS$KK
k11 <- zero(nbatch_mcmc)
k11 <- zeros(nbatch_mcmc)
k11 <- rep(0, nbatch_mcmc)
length(k11)
testSS$KK
testSS$KK[1,1]
testSS$KK[1,2]
k11 <- rep(0, nbatch_mcmc)
k12 <- rep(0, nbatch_mcmc)
k21 <- rep(0, nbatch_mcmc)
k22 <- rep(0, nbatch_mcmc)
ord <- 2
omega <- 1
for (i in 1:nbatch_mcmc){
rho <- rho_mcmc[i]
sig_u <- sig_u_mcmc[i]
sig_e <- sig_e_mcmc[i]
sig_n <- sig_n_mcmc[i]
aux <- StateSpaceMatLag(ord, rho, omega, sig_u, sig_e, sig_n, tol=1e-15)
k11[i] <- aux$KK[1, 1]
k12[i] <- aux$KK[1, 2]
k21[i] <- aux$KK[2, 1]
k22[i] <- aux$KK[2, 2]
}
plot(1:nbatch_mcmc, k11)
plot(1:nbatch_mcmc, k12)
plot(1:nbatch_mcmc, k21)
plot(1:nbatch_mcmc, k22)
plot(1:nbatch_mcmc, k12)
plot(1:nbatch_mcmc, k11)
paras_est
source("counterfactuals.R")
# test counterfactual code
paras <- c(paras_est[1], 1, paras_est[2:4])
paras
test <- covkal_counterfactual(paras, ord, tol=1e-15)
test$kg_weak_price
test <- covkal_counterfactual(paras, ord=3, tol=1e-15)
test <- covkal_counterfactual(paras, ord=2, tol=1e-15)
test$kg_weak_price
test
test2 <- StateSpaceMatLag(ord=3, rho=paras[1], omega=1, sig_u=paras[2],
sig_e=paras[3], sig_n=paras[4], tol=1e-15)
test2$KK
test2 <- StateSpaceMatLag(ord=2, rho=paras[1], omega=1, sig_u=paras[2],
sig_e=paras[3], sig_n=paras[4], tol=1e-15)
test2$KK
paras
test2 <- StateSpaceMatLag(ord=3, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2$KK
test2 <- StateSpaceMatLag(ord=2, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2$KK
test$kg_weak
test2 <- StateSpaceMatLag(ord=1, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2$KK
test2 <- StateSpaceMatLag(ord=2, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2$KK
test2 <- StateSpaceMatLag(ord=3, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2$KK
test2 <- StateSpaceMatLag(ord=4, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2 <- StateSpaceMatLag(ord=10, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2 <- StateSpaceMatLag(ord=6, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2 <- StateSpaceMatLag(ord=5, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2 <- StateSpaceMatLag(ord=4, rho=paras[1], omega=paras[2], sig_u=paras[3],
sig_e=paras[4], sig_n=paras[5], tol=1e-15)
test2$KK
test <- covkal_counterfactual(paras, ord=1, tol=1e-15)
test$cov_weak
test$kg_weak
